a:2:{s:7:"attribs";a:2:{s:5:"xmlns";s:48:"http://pear.php.net/dtd/rest.categorypackageinfo";s:18:"xsi:schemaLocation";s:105:"http://pear.php.net/dtd/rest.categorypackageinfo     http://pear.php.net/dtd/rest.categorypackageinfo.xsd";}s:2:"pi";a:2:{i:0;a:3:{s:1:"p";a:7:{s:1:"n";s:13:"Numbers_Roman";s:1:"c";s:12:"pear.php.net";s:2:"ca";a:2:{s:7:"attribs";a:1:{s:10:"xlink:href";s:15:"/rest/c/Numbers";}s:8:"_content";s:7:"Numbers";}s:1:"l";s:3:"PHP";s:1:"s";s:59:"Provides methods for converting to and from Roman Numerals.";s:1:"d";s:198:"Numbers_Roman provides static methods for converting to and from Roman 
numerals. It supports Roman numerals in both uppercase and lowercase 
styles and conversion for and to numbers up to 5 999 999";s:1:"r";a:1:{s:7:"attribs";a:1:{s:10:"xlink:href";s:21:"/rest/r/numbers_roman";}}}s:1:"a";a:1:{s:1:"r";a:4:{i:0;a:2:{s:1:"v";s:5:"1.0.1";s:1:"s";s:4:"beta";}i:1;a:2:{s:1:"v";s:5:"0.2.0";s:1:"s";s:6:"stable";}i:2;a:2:{s:1:"v";s:5:"0.1.1";s:1:"s";s:6:"stable";}i:3;a:2:{s:1:"v";s:3:"0.1";s:1:"s";s:6:"stable";}}}s:4:"deps";a:3:{i:0;a:2:{s:1:"v";s:5:"1.0.1";s:1:"d";s:4:"b:0;";}i:1;a:2:{s:1:"v";s:5:"0.2.0";s:1:"d";s:4:"b:0;";}i:2;a:2:{s:1:"v";s:5:"0.1.1";s:1:"d";s:4:"b:0;";}}}i:1;a:3:{s:1:"p";a:7:{s:1:"n";s:13:"Numbers_Words";s:1:"c";s:12:"pear.php.net";s:2:"ca";a:2:{s:7:"attribs";a:1:{s:10:"xlink:href";s:15:"/rest/c/Numbers";}s:8:"_content";s:7:"Numbers";}s:1:"l";s:11:"PHP License";s:1:"s";s:79:"The PEAR Numbers_Words package provides methods for spelling numerals in words.";s:1:"d";s:1409:"With Numbers_Words class you can convert numbers
written in arabic digits to words in several languages.
You can convert an integer between -infinity and infinity.
If your system does not support such long numbers you can
call Numbers_Words::toWords() with just a string.

With the Numbers_Words::toCurrency($num, $locale, 'USD') method
you can convert a number (decimal and fraction part) to words with currency name. 

The following languages are supported:
    * bg (Bulgarian) by Kouber Saparev
    * cs (Czech) by Petr 'PePa' Pavel
    * de (German) by me
    * dk (Danish) by Jesper Veggerby
    * en_100 (Donald Knuth system, English) by me
    * en_GB (British English) by me
    * en_US (American English) by me
    * es (Spanish Castellano) by Xavier Noguer
    * es_AR (Argentinian Spanish) by Martin Marrese
    * et (Estonian) by Erkki Saarniit
    * fr (French) by Kouber Saparev
    * fr_BE (French Belgium) by Kouber Saparev and Philippe Bajoit
    * he (Hebrew) by Hadar Porat
    * hu_HU (Hungarian) by Nils Homp
    * id (Indonesian) by Ernas M. Jamil and Arif Rifai Dwiyanto
    * it_IT (Italian) by Filippo Beltramini and Davide Caironi
    * lt (Lithuanian) by Laurynas Butkus
    * nl (Dutch) by WHAM van Dinter
    * pl (Polish) by me
    * pt_BR (Brazilian Portuguese) by Marcelo Subtil Marcal and Mario H.C.T.
    * ru (Russian) by Andrey Demenev
    * sv (Swedish) by Robin Ericsson";s:1:"r";a:1:{s:7:"attribs";a:1:{s:10:"xlink:href";s:21:"/rest/r/numbers_words";}}}s:1:"a";a:1:{s:1:"r";a:19:{i:0;a:2:{s:1:"v";s:6:"0.15.0";s:1:"s";s:4:"beta";}i:1;a:2:{s:1:"v";s:6:"0.14.0";s:1:"s";s:4:"beta";}i:2;a:2:{s:1:"v";s:6:"0.13.1";s:1:"s";s:4:"beta";}i:3;a:2:{s:1:"v";s:6:"0.13.0";s:1:"s";s:4:"beta";}i:4;a:2:{s:1:"v";s:6:"0.12.0";s:1:"s";s:4:"beta";}i:5;a:2:{s:1:"v";s:6:"0.11.0";s:1:"s";s:4:"beta";}i:6;a:2:{s:1:"v";s:6:"0.10.1";s:1:"s";s:4:"beta";}i:7;a:2:{s:1:"v";s:6:"0.10.0";s:1:"s";s:4:"beta";}i:8;a:2:{s:1:"v";s:5:"0.9.0";s:1:"s";s:4:"beta";}i:9;a:2:{s:1:"v";s:5:"0.8.1";s:1:"s";s:4:"beta";}i:10;a:2:{s:1:"v";s:3:"0.8";s:1:"s";s:4:"beta";}i:11;a:2:{s:1:"v";s:5:"0.7.1";s:1:"s";s:4:"beta";}i:12;a:2:{s:1:"v";s:3:"0.7";s:1:"s";s:4:"beta";}i:13;a:2:{s:1:"v";s:3:"0.6";s:1:"s";s:4:"beta";}i:14;a:2:{s:1:"v";s:5:"0.5.1";s:1:"s";s:4:"beta";}i:15;a:2:{s:1:"v";s:3:"0.5";s:1:"s";s:4:"beta";}i:16;a:2:{s:1:"v";s:3:"0.4";s:1:"s";s:4:"beta";}i:17;a:2:{s:1:"v";s:5:"0.3.1";s:1:"s";s:4:"beta";}i:18;a:2:{s:1:"v";s:3:"0.3";s:1:"s";s:4:"beta";}}}s:4:"deps";a:19:{i:0;a:2:{s:1:"v";s:6:"0.15.0";s:1:"d";s:116:"a:1:{s:8:"required";a:2:{s:3:"php";a:1:{s:3:"min";s:5:"4.0.0";}s:13:"pearinstaller";a:1:{s:3:"min";s:7:"1.4.0b1";}}}";}i:1;a:2:{s:1:"v";s:6:"0.14.0";s:1:"d";s:4:"b:0;";}i:2;a:2:{s:1:"v";s:6:"0.13.1";s:1:"d";s:4:"b:0;";}i:3;a:2:{s:1:"v";s:6:"0.13.0";s:1:"d";s:4:"b:0;";}i:4;a:2:{s:1:"v";s:6:"0.12.0";s:1:"d";s:4:"b:0;";}i:5;a:2:{s:1:"v";s:6:"0.11.0";s:1:"d";s:4:"b:0;";}i:6;a:2:{s:1:"v";s:6:"0.10.1";s:1:"d";s:4:"b:0;";}i:7;a:2:{s:1:"v";s:6:"0.10.0";s:1:"d";s:4:"b:0;";}i:8;a:2:{s:1:"v";s:5:"0.9.0";s:1:"d";s:4:"b:0;";}i:9;a:2:{s:1:"v";s:5:"0.8.1";s:1:"d";s:4:"b:0;";}i:10;a:2:{s:1:"v";s:3:"0.8";s:1:"d";s:4:"b:0;";}i:11;a:2:{s:1:"v";s:5:"0.7.1";s:1:"d";s:4:"b:0;";}i:12;a:2:{s:1:"v";s:3:"0.7";s:1:"d";s:4:"b:0;";}i:13;a:2:{s:1:"v";s:3:"0.6";s:1:"d";s:4:"b:0;";}i:14;a:2:{s:1:"v";s:5:"0.5.1";s:1:"d";s:4:"b:0;";}i:15;a:2:{s:1:"v";s:3:"0.5";s:1:"d";s:4:"b:0;";}i:16;a:2:{s:1:"v";s:3:"0.4";s:1:"d";s:4:"b:0;";}i:17;a:2:{s:1:"v";s:5:"0.3.1";s:1:"d";s:4:"b:0;";}i:18;a:2:{s:1:"v";s:3:"0.3";s:1:"d";s:4:"b:0;";}}}}}